type IntRange {
	min: Int
	max: Int
}
type Company implements INode {
	id: ID!
	created_by: ID
	name: String!
	desc: String!
	url: String
	logo: String
	location: String
	reviews: [ID!]
	founded_year: String
	last_active: String
	hiring_status: Boolean
	skills: [String!]
	no_of_employees: IntRange
	opensource: [String]
	created_at: String!
	updated_at: String!
}
input CompanyDetails {
	created_by: ID!
	name: String!
	desc: String!
	url: String
	logo: String
	location: String
	compnay_since: String
	hiring_status: Boolean
	languages: [String!]
	no_of_employees: Int
}
extend type Query {
	fetchCompany: Company
}
extend type Mutation {
	createCompany(input: CompanyDetails!): Company
}
