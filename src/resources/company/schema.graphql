type IntRange {
	min: Int
	max: Int
}
type Company implements INode {
	id: ID!
	created_by: ID
	name: String!
	desc: String!
	url: String
	logo: String
	location: String!
	reviews: [ID!]
	founded_year: String!
	last_active: String
	hiring_status: Boolean
	skills: [String!]!
	no_of_employees: IntRange
	opensource: [String!]
	created_at: String!
	updated_at: String!
}
input IntRangeMutation {
	min: Int
	max: Int
}
input CompanyDetails {
	name: String!
	desc: String!
	url: String
	logo: String
	location: String!
	founded_year: String!
	hiring_status: Boolean
	skills: [String!]!
	no_of_employees: IntRangeMutation
	opensource: [String!]
}
extend type Query {
	fetchCompanies: [Company!]!
	fetchCompany(id: ID!): Company
}
extend type Mutation {
	createCompany(input: CompanyDetails!): Result!
}
