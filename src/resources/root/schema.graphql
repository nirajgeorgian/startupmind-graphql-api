enum Permissions {
	ADMIN
	COMPANY
	INVESTOR
	JOBUSER
	ONLYREAD
	PERMISSIONUPDATE
}
enum Gender {
	male
	female
	other
}
enum AccType {
	USER
	COMPANY_USER
	FUNDING_USER
}

interface INode {
	id: ID!
	created_at: String!
	updated_at: String!
}
interface IUser {
	firstname: String!
	lastname: String!
	email: String!
	username: String!
	gender: Gender!
	phone: Phone!
	info: AccInfo!
	type: AccType!
}

union Result = Error | User | CompanyUser | Token | Job | Company
union Node = Job

type Error {
	message: String!
}
type Token {
	type: String
	default: String
	token: String!
}
type Edge {
	cursor: String!
	node: [Node!]!
}
type PageInfo {
	endCursor: String!
	hasNextPage: Boolean!
}
type Phone {
	no: String!
	con_code: String!
	verified: Boolean!
}
type AccInfo {
	level: String
	verified: Boolean!
}
type Query {
	dummy: String
}
type Mutation {
	dummy: String
}
type Subscription {
	dummy: String
}
schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}
